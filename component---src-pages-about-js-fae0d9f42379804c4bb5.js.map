{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["data","site","siteMetadata","title","query","ListLink","props","style","display","marginRight","to","children","Header","pages","allFile","edges","map","page","key","node","id","name","marginBottom","textShadow","backgroundImage","listStyle","float","Footer","position","bottom","Layout","margin","maxWidth","padding","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"6FAAA,kFAIe,0BAAGA,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,qCAAWA,EAAKC,KAAKC,aAAaC,OAClC,0CAMG,IAAMC,EAAK,c,+FCPZC,G,UAAW,SAAAC,GAAK,OAClB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,IAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,aAiClBC,EA9BA,WACX,IAaMC,EAbI,OAaSC,QAAQC,MAAMC,KAAI,SAACC,GAClC,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAKE,KAAKC,GAAIV,GAAE,IAAMO,EAAKE,KAAKE,MAASJ,EAAKE,KAAKE,SAE7E,OACI,4BAAQd,MAAO,CAAEe,aAAa,WAC1B,kBAAC,IAAD,CAAMZ,GAAG,IAAIH,MAAO,CAAEgB,WAAW,OAASC,gBAAgB,SACtD,wBAAIjB,MAAO,CAAEC,QAAQ,WAArB,YAEJ,wBAAID,MAAO,CAAEkB,UAAU,OAASC,MAAM,UAClC,kBAAC,EAAD,CAAUR,IAAK,KAAMR,GAAE,KAAvB,QACCG,KCvBFc,EATA,kBACX,4BAAQpB,MAAO,CACPqB,SAAU,WACVC,OAAQ,MAEZ,mDCQOC,IAZA,SAAC,GAAD,IAAGnB,EAAH,EAAGA,SAAH,OACb,yBAAKJ,MAAO,CACNwB,OAAO,YACPC,SAAU,IACVC,QAAQ,SAER,SAAW,SACf,kBAAC,EAAD,MACCtB,EACD,kBAAC,EAAD,S,6TCbJ,sGAcyBuB,QAAOC,QAELC,IAAMC,cAAc,K,kEChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-about-js-fae0d9f42379804c4bb5.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => (\n  <Layout>\n    <h1>About {data.site.siteMetadata.title}</h1>\n    <p>\n      a student\n    </p>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport {useStaticQuery, Link, graphql } from \"gatsby\";\nimport routes from \"../route.json\";\n\n\n// export const query = graphql``;\nconst ListLink = props => (\n    <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n      <Link to={props.to}>{props.children}</Link>\n    </li>\n);\nconst Header = () => {\n    const data = useStaticQuery(\n        graphql`query {\n            allFile(filter: {relativeDirectory: {eq: \"pages\"}, name: {ne: \"index\"}}) {\n              edges {\n                node {\n                  id\n                  name\n                  relativePath\n                }\n              }\n            }\n          }\n    `);\n    const pages = data.allFile.edges.map((page)=>{\n        return <ListLink key={page.node.id} to={`/${page.node.name}`}>{page.node.name}</ListLink>\n    });\n    return (\n        <header style={{ marginBottom: `1.5rem` }}>\n            <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n                <h1 style={{ display: `inline` }}>Hacklog</h1>\n            </Link>\n            <ul style={{ listStyle: `none`, float: `right` }}>\n                <ListLink key={7122} to={`/`}>home</ListLink>\n                {pages}\n            </ul>\n        </header>\n    )\n};\n\nexport default Header;","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Footer = () => (\n    <footer style={{\n            position: 'absolute',\n            bottom: '0'\n        }}>\n        <p>Â© 2020 Justin Chen</p>\n    </footer>\n);\n\nexport default Footer;","import React from \"react\";\nimport Header from \"./header.js\";\nimport Footer from \"./footer.js\";\n\nconst Layout = ({ children }) => (\n  <div style={{ \n        margin: `3rem auto`,\n        maxWidth: 600,\n        padding: `0 1rem`,\n        // position:`relative`,\n        'minHight': `100%`}}>\n    <Header/>\n    {children}\n    <Footer/>\n  </div>\n);\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}